/**
 * EIM, Copyright 2014 Denis Meyer
 */
package com.eim.ui;

import com.eim.db.EIMI18N;
import com.eim.img.EIMImage;
import com.eim.util.EIMConstants;
import java.awt.event.KeyEvent;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.FileNotFoundException;
import javax.swing.JButton;
import javax.swing.JFrame;
import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;

/**
 * EIMPreferences
 *
 * @author Denis Meyer
 */
public abstract class EIMPreferencesUI extends javax.swing.JDialog {

    private static final Logger logger = LogManager.getLogger(EIMPreferencesUI.class.getName());

    public EIMPreferencesUI(JFrame owner) {
        super(owner);
        if (logger.isDebugEnabled()) {
            logger.debug("Initializing EIMPreferencesUI");
        }
        initComponents();

        this.setTitle(EIMI18N.getInstance().getString("Preferences"));
        this.button_cancel.setText(EIMI18N.getInstance().getString("Cancel"));
        this.button_ok.setText(EIMI18N.getInstance().getString("Ok"));
        this.label_logo_text.setText(EIMI18N.getInstance().getString("Preferences"));
        this.checkbox_saveData.setText(EIMI18N.getInstance().getString("SaveData"));
        this.checkbox_autoLogin.setText(EIMI18N.getInstance().getString("AutoLogin"));
        this.checkbox_playSounds.setText(EIMI18N.getInstance().getString("PlaySounds"));
        this.checkbox_displayNotifications.setText(EIMI18N.getInstance().getString("DisplayNotifications"));
        this.checkbox_onlyEIMMsgs.setText(EIMI18N.getInstance().getString("OnlyEIMMessages"));

        try {
            this.setIconImage(EIMImage.getInstance().getImageIcon(EIMConstants.getImagePath(EIMConstants.IMAGE.IMG_ICON)).getImage());
        } catch (FileNotFoundException e) {
            if (logger.isDebugEnabled()) {
                logger.debug("FileNotFoundException: " + e.getMessage());
            }
        }

        this.label_logo.setText("");
        try {
            this.label_logo.setIcon(EIMImage.getInstance().getImageIcon(EIMConstants.getImagePath(EIMConstants.IMAGE.IMG_PREFERENCES)));
        } catch (FileNotFoundException e) {
            if (logger.isDebugEnabled()) {
                logger.debug("FileNotFoundException: " + e.getMessage());
            }
        }

        this.button_ok.requestFocus();
        this.setLocationRelativeTo(null);

        addListener();
        onInit();
    }

    public abstract void loadDataRequest();

    public abstract void savePreferences(
            boolean saveData,
            boolean autoLogin,
            boolean playSounds,
            boolean displayNotifications,
            boolean onlyEIMMsgs);

    public void setData(
            boolean saveData,
            boolean autoLogin,
            boolean playSounds,
            boolean displayNotifications,
            boolean onlyEIMMsgs) {
        this.checkbox_saveData.setSelected(saveData);
        this.checkbox_autoLogin.setSelected(autoLogin);
        this.checkbox_playSounds.setSelected(playSounds);
        this.checkbox_displayNotifications.setSelected(displayNotifications);
        this.checkbox_onlyEIMMsgs.setSelected(onlyEIMMsgs);
    }

    private void addListener() {
        final JButton button = this.button_ok;
        this.addWindowListener(new WindowAdapter() {
            @Override
            public void windowActivated(WindowEvent e) {
                loadDataRequest();
                button.requestFocus();
            }
        });
    }

    private void onInit() {
        loadDataRequest();
    }

    private void checkSavePreferences() {
        savePreferences(
                this.checkbox_saveData.isSelected(),
                this.checkbox_autoLogin.isSelected(),
                this.checkbox_playSounds.isSelected(),
                this.checkbox_displayNotifications.isSelected(),
                this.checkbox_onlyEIMMsgs.isSelected());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        panel_main = new javax.swing.JPanel();
        panel_header = new javax.swing.JPanel();
        label_logo = new javax.swing.JLabel();
        label_logo_text = new javax.swing.JLabel();
        panel_checkboxes = new javax.swing.JPanel();
        checkbox_saveData = new javax.swing.JCheckBox();
        checkbox_autoLogin = new javax.swing.JCheckBox();
        checkbox_playSounds = new javax.swing.JCheckBox();
        checkbox_displayNotifications = new javax.swing.JCheckBox();
        checkbox_onlyEIMMsgs = new javax.swing.JCheckBox();
        panel_buttons = new javax.swing.JPanel();
        button_cancel = new javax.swing.JButton();
        button_ok = new javax.swing.JButton();

        setTitle("Preferences");
        setLocationByPlatform(true);
        setMaximumSize(new java.awt.Dimension(472, 215));
        setMinimumSize(new java.awt.Dimension(472, 215));
        setModalExclusionType(java.awt.Dialog.ModalExclusionType.APPLICATION_EXCLUDE);
        setModalityType(java.awt.Dialog.ModalityType.APPLICATION_MODAL);
        setPreferredSize(new java.awt.Dimension(472, 215));
        setResizable(false);
        getContentPane().setLayout(new java.awt.GridLayout(1, 0));

        panel_main.setBorder(javax.swing.BorderFactory.createEmptyBorder(5, 5, 5, 5));
        panel_main.setLayout(new java.awt.GridBagLayout());

        label_logo.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        label_logo.setText("LOGO");
        panel_header.add(label_logo);

        label_logo_text.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        label_logo_text.setText("Preferences");
        panel_header.add(label_logo_text);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        panel_main.add(panel_header, gridBagConstraints);

        panel_checkboxes.setLayout(new java.awt.GridLayout(5, 1));

        checkbox_saveData.setSelected(true);
        checkbox_saveData.setText("Save data");
        checkbox_saveData.setNextFocusableComponent(checkbox_autoLogin);
        checkbox_saveData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkbox_saveDataActionPerformed(evt);
            }
        });
        panel_checkboxes.add(checkbox_saveData);

        checkbox_autoLogin.setSelected(true);
        checkbox_autoLogin.setText("Automatically log in");
        checkbox_autoLogin.setNextFocusableComponent(button_ok);
        checkbox_autoLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkbox_autoLoginActionPerformed(evt);
            }
        });
        panel_checkboxes.add(checkbox_autoLogin);

        checkbox_playSounds.setSelected(true);
        checkbox_playSounds.setText("Play sounds");
        checkbox_playSounds.setNextFocusableComponent(button_ok);
        checkbox_playSounds.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkbox_playSoundsActionPerformed(evt);
            }
        });
        panel_checkboxes.add(checkbox_playSounds);

        checkbox_displayNotifications.setSelected(true);
        checkbox_displayNotifications.setText("Display notifications");
        checkbox_displayNotifications.setNextFocusableComponent(checkbox_onlyEIMMsgs);
        checkbox_displayNotifications.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkbox_displayNotificationsActionPerformed(evt);
            }
        });
        panel_checkboxes.add(checkbox_displayNotifications);

        checkbox_onlyEIMMsgs.setSelected(true);
        checkbox_onlyEIMMsgs.setText("Display only messages sent from EIM");
        checkbox_onlyEIMMsgs.setNextFocusableComponent(button_ok);
        checkbox_onlyEIMMsgs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkbox_onlyEIMMsgsActionPerformed(evt);
            }
        });
        panel_checkboxes.add(checkbox_onlyEIMMsgs);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        panel_main.add(panel_checkboxes, gridBagConstraints);

        panel_buttons.setLayout(new java.awt.GridLayout(1, 2));

        button_cancel.setText("Cancel");
        button_cancel.setNextFocusableComponent(checkbox_saveData);
        button_cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_cancelActionPerformed(evt);
            }
        });
        button_cancel.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                button_cancelKeyReleased(evt);
            }
        });
        panel_buttons.add(button_cancel);

        button_ok.setText("Ok");
        button_ok.setNextFocusableComponent(button_cancel);
        button_ok.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_okActionPerformed(evt);
            }
        });
        button_ok.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                button_okKeyReleased(evt);
            }
        });
        panel_buttons.add(button_ok);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LAST_LINE_END;
        panel_main.add(panel_buttons, gridBagConstraints);

        getContentPane().add(panel_main);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void checkbox_saveDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkbox_saveDataActionPerformed
        this.button_ok.requestFocus();
    }//GEN-LAST:event_checkbox_saveDataActionPerformed

    private void checkbox_autoLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkbox_autoLoginActionPerformed
        this.button_ok.requestFocus();
    }//GEN-LAST:event_checkbox_autoLoginActionPerformed

    private void button_cancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_cancelActionPerformed
        this.setVisible(false);
    }//GEN-LAST:event_button_cancelActionPerformed

    private void button_cancelKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_button_cancelKeyReleased
        if ((evt.getKeyCode() == KeyEvent.VK_ENTER) || (evt.getKeyCode() == KeyEvent.VK_ESCAPE)) {
            this.setVisible(false);
        }
    }//GEN-LAST:event_button_cancelKeyReleased

    private void button_okActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_okActionPerformed
        checkSavePreferences();
        this.setVisible(false);
    }//GEN-LAST:event_button_okActionPerformed

    private void button_okKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_button_okKeyReleased
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            checkSavePreferences();
            this.setVisible(false);
        } else if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
            this.setVisible(false);
        }
    }//GEN-LAST:event_button_okKeyReleased

    private void checkbox_playSoundsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkbox_playSoundsActionPerformed
        this.button_ok.requestFocus();
    }//GEN-LAST:event_checkbox_playSoundsActionPerformed

    private void checkbox_displayNotificationsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkbox_displayNotificationsActionPerformed
        this.button_ok.requestFocus();
    }//GEN-LAST:event_checkbox_displayNotificationsActionPerformed

    private void checkbox_onlyEIMMsgsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkbox_onlyEIMMsgsActionPerformed
        this.button_ok.requestFocus();
    }//GEN-LAST:event_checkbox_onlyEIMMsgsActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton button_cancel;
    private javax.swing.JButton button_ok;
    private javax.swing.JCheckBox checkbox_autoLogin;
    private javax.swing.JCheckBox checkbox_displayNotifications;
    private javax.swing.JCheckBox checkbox_onlyEIMMsgs;
    private javax.swing.JCheckBox checkbox_playSounds;
    private javax.swing.JCheckBox checkbox_saveData;
    private javax.swing.JLabel label_logo;
    private javax.swing.JLabel label_logo_text;
    private javax.swing.JPanel panel_buttons;
    private javax.swing.JPanel panel_checkboxes;
    private javax.swing.JPanel panel_header;
    private javax.swing.JPanel panel_main;
    // End of variables declaration//GEN-END:variables
}
